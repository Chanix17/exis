#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Exis.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Exis")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ExisConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AssignTechnical")]
		public int AssignTechnical([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobId", DbType="NVarChar(50)")] string jobId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Technician", DbType="NVarChar(50)")] string technician)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobId, technician);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChangePassword")]
		public int ChangePassword([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(50)")] string userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, password);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckScheduleInstallationForToday")]
		public ISingleResult<CheckScheduleInstallationForTodayResult> CheckScheduleInstallationForToday([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobType", DbType="NVarChar(50)")] string jobType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateScheduled", DbType="NVarChar(50)")] string dateScheduled)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobType, status, dateScheduled);
			return ((ISingleResult<CheckScheduleInstallationForTodayResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckUser")]
		public ISingleResult<CheckUserResult> CheckUser()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CheckUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountAllBill")]
		public ISingleResult<CountAllBillResult> CountAllBill()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CountAllBillResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountBadgeForActivationFromCustomer")]
		public ISingleResult<CountBadgeForActivationFromCustomerResult> CountBadgeForActivationFromCustomer()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CountBadgeForActivationFromCustomerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountBill")]
		public ISingleResult<CountBillResult> CountBill([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((ISingleResult<CountBillResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountCustomer")]
		public ISingleResult<CountCustomerResult> CountCustomer()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CountCustomerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountJobOrder")]
		public ISingleResult<CountJobOrderResult> CountJobOrder()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CountJobOrderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountServicePlan")]
		public ISingleResult<CountServicePlanResult> CountServicePlan()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CountServicePlanResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountTowerAll")]
		public ISingleResult<CountTowerAllResult> CountTowerAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CountTowerAllResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountUser")]
		public ISingleResult<CountUserResult> CountUser()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CountUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertCustomer")]
		public int InsertCustomer(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Firstname", DbType="NVarChar(50)")] string firstname, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Middlename", DbType="NVarChar(50)")] string middlename, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Lastname", DbType="NVarChar(50)")] string lastname, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Birthdate", DbType="NVarChar(50)")] string birthdate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CivilStatus", DbType="NVarChar(50)")] string civilStatus, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="NVarChar(50)")] string gender, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nationality", DbType="NVarChar(50)")] string nationality, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyName", DbType="NVarChar(50)")] string companyName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanName", DbType="NVarChar(50)")] string servicePlanName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillingAddress", DbType="NVarChar(50)")] string billingAddress, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TowerID", DbType="NVarChar(50)")] string towerID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnitNo", DbType="NVarChar(50)")] string unitNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailAddress", DbType="NVarChar(50)")] string emailAddress, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactNumber", DbType="NVarChar(50)")] string contactNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactNumber2", DbType="NVarChar(50)")] string contactNumber2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateAdded", DbType="NVarChar(50)")] string dateAdded)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber, firstname, middlename, lastname, birthdate, civilStatus, gender, nationality, companyName, servicePlanName, billingAddress, towerID, unitNo, emailAddress, contactNumber, contactNumber2, status, dateAdded);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertJobOrder")]
		public int InsertJobOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobId", DbType="NVarChar(50)")] string jobId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobType", DbType="NVarChar(50)")] string jobType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(MAX)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstallationNotes", DbType="NVarChar(MAX)")] string installationNotes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Remarks", DbType="NVarChar(MAX)")] string remarks, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Technician", DbType="NVarChar(50)")] string technician, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateCreated", DbType="NVarChar(50)")] string dateCreated, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateScheduled", DbType="NVarChar(50)")] string dateScheduled, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeScheduled", DbType="NVarChar(50)")] string timeScheduled, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobId, jobType, accountNumber, description, installationNotes, remarks, technician, dateCreated, dateScheduled, timeScheduled, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertServicePlan")]
		public int InsertServicePlan([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanID", DbType="NVarChar(50)")] string servicePlanID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanName", DbType="NVarChar(50)")] string servicePlanName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(MAX)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Internet", DbType="Decimal(18,2)")] System.Nullable<decimal> internet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VAT", DbType="Decimal(18,2)")] System.Nullable<decimal> vAT, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Less", DbType="Decimal(18,2)")] System.Nullable<decimal> less, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Total", DbType="Decimal(18,2)")] System.Nullable<decimal> total, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), servicePlanID, servicePlanName, description, internet, vAT, less, total, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertTower")]
		public int InsertTower([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TowerID", DbType="Int")] System.Nullable<int> towerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TowerName", DbType="NVarChar(50)")] string towerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), towerID, towerName, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertUser")]
		public int InsertUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(50)")] string userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Firstname", DbType="NVarChar(50)")] string firstname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Middlename", DbType="NVarChar(50)")] string middlename, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Lastname", DbType="NVarChar(50)")] string lastname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserType", DbType="NVarChar(50)")] string userType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, firstname, middlename, lastname, password, userType, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectAllCustomer")]
		public ISingleResult<SelectAllCustomerResult> SelectAllCustomer()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SelectAllCustomerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectCustomer")]
		public ISingleResult<SelectCustomerResult> SelectCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((ISingleResult<SelectCustomerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectJobOrder")]
		public ISingleResult<SelectJobOrderResult> SelectJobOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobId", DbType="NVarChar(50)")] string jobId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobId);
			return ((ISingleResult<SelectJobOrderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectServicePlan")]
		public ISingleResult<SelectServicePlanResult> SelectServicePlan([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanID", DbType="NVarChar(50)")] string servicePlanID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), servicePlanID);
			return ((ISingleResult<SelectServicePlanResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectServicePlanByPlanName")]
		public ISingleResult<SelectServicePlanByPlanNameResult> SelectServicePlanByPlanName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanName", DbType="NVarChar(50)")] string servicePlanName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), servicePlanName);
			return ((ISingleResult<SelectServicePlanByPlanNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.setInactiveServicePlan")]
		public int setInactiveServicePlan([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanID", DbType="NVarChar(50)")] string servicePlanID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), servicePlanID, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBillPaid")]
		public int UpdateBillPaid([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillingID", DbType="NVarChar(50)")] string billingID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentReceived", DbType="Decimal(18,2)")] System.Nullable<decimal> paymentReceived)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billingID, status, paymentReceived);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustomer")]
		public int UpdateCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyName", DbType="NVarChar(50)")] string companyName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillingAddress", DbType="NVarChar(50)")] string billingAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TowerID", DbType="NVarChar(50)")] string towerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnitNo", DbType="NVarChar(50)")] string unitNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailAddress", DbType="NVarChar(50)")] string emailAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactNumber", DbType="NVarChar(50)")] string contactNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactNumber2", DbType="NVarChar(50)")] string contactNumber2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber, companyName, billingAddress, towerID, unitNo, emailAddress, contactNumber, contactNumber2);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustomerActive")]
		public int UpdateCustomerActive([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustomertoForActivation")]
		public int UpdateCustomertoForActivation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustomertoReadyForActivation")]
		public int UpdateCustomertoReadyForActivation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateJobOrderPending")]
		public int UpdateJobOrderPending([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobId", DbType="NVarChar(50)")] string jobId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Remarks", DbType="NVarChar(MAX)")] string remarks, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobId, remarks, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateJobOrderResched")]
		public int UpdateJobOrderResched([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobId", DbType="NVarChar(50)")] string jobId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateScheduled", DbType="NVarChar(50)")] string dateScheduled)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobId, dateScheduled);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateJobOrderStatus")]
		public int UpdateJobOrderStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobId", DbType="NVarChar(50)")] string jobId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobId, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateUserStatus")]
		public int UpdateUserStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="NVarChar(50)")] string userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectUserWhereUserID")]
		public ISingleResult<SelectUserWhereUserIDResult> SelectUserWhereUserID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(50)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<SelectUserWhereUserIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateUserChangeUserType")]
		public int UpdateUserChangeUserType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(50)")] string userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserType", DbType="NVarChar(50)")] string userType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, userType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateResetPasswordUser")]
		public int UpdateResetPasswordUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(50)")] string userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, password);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateServicePlan")]
		public int UpdateServicePlan([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanID", DbType="NVarChar(50)")] string servicePlanID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanName", DbType="NVarChar(50)")] string servicePlanName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(MAX)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Internet", DbType="Decimal(18,2)")] System.Nullable<decimal> internet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VAT", DbType="Decimal(18,2)")] System.Nullable<decimal> vAT, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Less", DbType="Decimal(18,2)")] System.Nullable<decimal> less, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Total", DbType="Decimal(18,2)")] System.Nullable<decimal> total, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), servicePlanID, servicePlanName, description, internet, vAT, less, total, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountBadgeForActivationAndOpenFromJobOrder")]
		public ISingleResult<CountBadgeForActivationAndOpenFromJobOrderResult> CountBadgeForActivationAndOpenFromJobOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Datetimetoday", DbType="NVarChar(50)")] string datetimetoday)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), datetimetoday);
			return ((ISingleResult<CountBadgeForActivationAndOpenFromJobOrderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertCustomerType")]
		public int InsertCustomerType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerType", DbType="NVarChar(50)")] string customerType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ValidID", DbType="NVarChar(50)")] string validID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AuthorityToMoveIn", DbType="NVarChar(50)")] string authorityToMoveIn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Passport", DbType="NVarChar(50)")] string passport, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ICRCard", DbType="NVarChar(50)")] string iCRCard, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeaseOfContract", DbType="NVarChar(50)")] string leaseOfContract)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber, customerType, validID, authorityToMoveIn, passport, iCRCard, leaseOfContract);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectCustomerType")]
		public ISingleResult<SelectCustomerTypeResult> SelectCustomerType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((ISingleResult<SelectCustomerTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustomerType")]
		public int UpdateCustomerType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ValidID", DbType="NVarChar(50)")] string validID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AuthorityToMoveIn", DbType="NVarChar(50)")] string authorityToMoveIn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Passport", DbType="NVarChar(50)")] string passport, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ICRCard", DbType="NVarChar(50)")] string iCRCard, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeaseOfContract", DbType="NVarChar(50)")] string leaseOfContract)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber, validID, authorityToMoveIn, passport, iCRCard, leaseOfContract);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckScheduleConflict")]
		public ISingleResult<CheckScheduleConflictResult> CheckScheduleConflict([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobType", DbType="NVarChar(50)")] string jobType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateScheduled", DbType="NVarChar(50)")] string dateScheduled, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeScheduled", DbType="NVarChar(50)")] string timeScheduled)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobType, dateScheduled, timeScheduled);
			return ((ISingleResult<CheckScheduleConflictResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UPDATEJobOrderToClosed")]
		public int UPDATEJobOrderToClosed([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchAccountNumber")]
		public ISingleResult<SearchAccountNumberResult> SearchAccountNumber([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TowerUnitNumber", DbType="NVarChar(50)")] string towerUnitNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), towerUnitNumber);
			return ((ISingleResult<SearchAccountNumberResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountBadgeForActivationFromJobOrder")]
		public ISingleResult<CountBadgeForActivationFromJobOrderResult> CountBadgeForActivationFromJobOrder()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CountBadgeForActivationFromJobOrderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountBadgeForRepairAndOpenFromJobOrder")]
		public ISingleResult<CountBadgeForRepairAndOpenFromJobOrderResult> CountBadgeForRepairAndOpenFromJobOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobType", DbType="NVarChar(50)")] string jobType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), status, jobType);
			return ((ISingleResult<CountBadgeForRepairAndOpenFromJobOrderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckCustomerIfExistByTowerAndUnitNumber")]
		public ISingleResult<CheckCustomerIfExistByTowerAndUnitNumberResult> CheckCustomerIfExistByTowerAndUnitNumber([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TowerID", DbType="NVarChar(1)")] string towerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnitNumber", DbType="NVarChar(4)")] string unitNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), towerID, unitNumber);
			return ((ISingleResult<CheckCustomerIfExistByTowerAndUnitNumberResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBillingFromAdmin")]
		public int UpdateBillingFromAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCurrentBill", DbType="Decimal(18,2)")] System.Nullable<decimal> totalCurrentBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalAmountDue", DbType="Decimal(18,2)")] System.Nullable<decimal> totalAmountDue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlandID", DbType="NVarChar(50)")] string servicePlandID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber, totalCurrentBill, totalAmountDue, servicePlandID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustomerByAdmin")]
		public int UpdateCustomerByAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Firstname", DbType="NVarChar(50)")] string firstname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Middlename", DbType="NVarChar(50)")] string middlename, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Lastname", DbType="NVarChar(50)")] string lastname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Birthdate", DbType="NVarChar(50)")] string birthdate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CivilStatus", DbType="NVarChar(50)")] string civilStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="NVarChar(50)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nationality", DbType="NVarChar(50)")] string nationality, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailAddress", DbType="NVarChar(50)")] string emailAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactNumber", DbType="NVarChar(50)")] string contactNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactNumber2", DbType="NVarChar(50)")] string contactNumber2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanName", DbType="NVarChar(50)")] string servicePlanName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber, firstname, middlename, lastname, birthdate, civilStatus, gender, nationality, emailAddress, contactNumber, contactNumber2, servicePlanName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBillingFromCSRbyAccountNumberandForPayment")]
		public int UpdateBillingFromCSRbyAccountNumberandForPayment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCurrentBill", DbType="Decimal(18,2)")] System.Nullable<decimal> totalCurrentBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalAmountDue", DbType="Decimal(18,2)")] System.Nullable<decimal> totalAmountDue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlandID", DbType="NVarChar(50)")] string servicePlandID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber, totalCurrentBill, totalAmountDue, servicePlandID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustomerServicePlanByCSR")]
		public int UpdateCustomerServicePlanByCSR([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanName", DbType="NVarChar(50)")] string servicePlanName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber, servicePlanName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustomerStatusForDisconnection")]
		public int UpdateCustomerStatusForDisconnection([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectBillingbyAccountNumber")]
		public ISingleResult<SelectBillingbyAccountNumberResult> SelectBillingbyAccountNumber([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((ISingleResult<SelectBillingbyAccountNumberResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateRemainingBalanceFromPreviousBill")]
		public int UpdateRemainingBalanceFromPreviousBill([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemainingBalanceFromPreviousBill", DbType="Decimal(18,2)")] System.Nullable<decimal> remainingBalanceFromPreviousBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstallationBalance", DbType="Decimal(18,2)")] System.Nullable<decimal> installationBalance)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), remainingBalanceFromPreviousBill, accountNumber, installationBalance);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertBillingInstallation")]
		public int InsertBillingInstallation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillingID", DbType="NVarChar(50)")] string billingID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateAdded", DbType="NVarChar(50)")] string dateAdded, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillNumber", DbType="Int")] System.Nullable<int> billNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BalanceFromPreviousBill", DbType="Decimal(18,2)")] System.Nullable<decimal> balanceFromPreviousBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentReceivedPreviousBill", DbType="Decimal(18,2)")] System.Nullable<decimal> paymentReceivedPreviousBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentReceived", DbType="Decimal(18,2)")] System.Nullable<decimal> paymentReceived, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemainingBalanceFromPreviousBill", DbType="Decimal(18,2)")] System.Nullable<decimal> remainingBalanceFromPreviousBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServicePlanID", DbType="NVarChar(50)")] string servicePlanID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCurrentBill", DbType="Decimal(18,2)")] System.Nullable<decimal> totalCurrentBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalAmountDue", DbType="Decimal(18,2)")] System.Nullable<decimal> totalAmountDue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DueDate", DbType="NVarChar(50)")] string dueDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DueDateIdentifier", DbType="NVarChar(50)")] string dueDateIdentifier, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstallationBalance", DbType="Decimal(18,2)")] System.Nullable<decimal> installationBalance)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billingID, accountNumber, dateAdded, billNumber, balanceFromPreviousBill, paymentReceivedPreviousBill, paymentReceived, remainingBalanceFromPreviousBill, servicePlanID, totalCurrentBill, totalAmountDue, dueDate, dueDateIdentifier, status, installationBalance);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectBillingbyAccountNumberandStatusForPayment")]
		public ISingleResult<SelectBillingbyAccountNumberandStatusForPaymentResult> SelectBillingbyAccountNumberandStatusForPayment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((ISingleResult<SelectBillingbyAccountNumberandStatusForPaymentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectBillID")]
		public ISingleResult<SelectBillIDResult> SelectBillID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillingID", DbType="NVarChar(50)")] string billingID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billingID);
			return ((ISingleResult<SelectBillIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBillingTotalAmountDue")]
		public int UpdateBillingTotalAmountDue([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillingID", DbType="NVarChar(50)")] string billingID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateModified", DbType="NVarChar(50)")] string dateModified, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentReceived", DbType="Decimal(18,2)")] System.Nullable<decimal> paymentReceived, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstallationBalance", DbType="Decimal(18,2)")] System.Nullable<decimal> installationBalance, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCurrentBill", DbType="Decimal(18,2)")] System.Nullable<decimal> totalCurrentBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalAmountDue", DbType="Decimal(18,2)")] System.Nullable<decimal> totalAmountDue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billingID, dateModified, paymentReceived, status, installationBalance, totalCurrentBill, totalAmountDue);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateClosePreviousBill")]
		public int UpdateClosePreviousBill([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillNumber", DbType="Int")] System.Nullable<int> billNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber, billNumber);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBillingTotalAmountDueBalance")]
		public int UpdateBillingTotalAmountDueBalance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillingID", DbType="NVarChar(50)")] string billingID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateModified", DbType="NVarChar(50)")] string dateModified, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentReceived", DbType="Decimal(18,2)")] System.Nullable<decimal> paymentReceived, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCurrentBill", DbType="Decimal(18,2)")] System.Nullable<decimal> totalCurrentBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalAmountDue", DbType="Decimal(18,2)")] System.Nullable<decimal> totalAmountDue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billingID, dateModified, paymentReceived, status, totalCurrentBill, totalAmountDue);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBillingTotalAmountDueForSobraOrSaktoRaAngGebayad")]
		public int UpdateBillingTotalAmountDueForSobraOrSaktoRaAngGebayad([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BillingID", DbType="NVarChar(50)")] string billingID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateModified", DbType="NVarChar(50)")] string dateModified, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentReceived", DbType="Decimal(18,2)")] System.Nullable<decimal> paymentReceived, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="NVarChar(50)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCurrentBill", DbType="Decimal(18,2)")] System.Nullable<decimal> totalCurrentBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalAmountDue", DbType="Decimal(18,2)")] System.Nullable<decimal> totalAmountDue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BalanceFromPreviousBill", DbType="Decimal(18,2)")] System.Nullable<decimal> balanceFromPreviousBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RemainingBalanceFromPreviousBill", DbType="Decimal(18,2)")] System.Nullable<decimal> remainingBalanceFromPreviousBill, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InstallationBalance", DbType="Decimal(18,2)")] System.Nullable<decimal> installationBalance)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), billingID, dateModified, paymentReceived, status, totalCurrentBill, totalAmountDue, balanceFromPreviousBill, remainingBalanceFromPreviousBill, installationBalance);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustomerDisconnected")]
		public int UpdateCustomerDisconnected([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="NVarChar(50)")] string accountNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountNumber);
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class CheckScheduleInstallationForTodayResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CheckScheduleInstallationForTodayResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CheckUserResult
	{
		
		private string _UserID;
		
		private string _Firstname;
		
		private string _Middlename;
		
		private string _Lastname;
		
		private string _Password;
		
		private string _UserType;
		
		private string _Status;
		
		public CheckUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middlename", DbType="NVarChar(50)")]
		public string Middlename
		{
			get
			{
				return this._Middlename;
			}
			set
			{
				if ((this._Middlename != value))
				{
					this._Middlename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(50)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this._UserType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class CountAllBillResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountAllBillResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CountBadgeForActivationFromCustomerResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountBadgeForActivationFromCustomerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CountBillResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountBillResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CountCustomerResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountCustomerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CountJobOrderResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountJobOrderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CountServicePlanResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountServicePlanResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CountTowerAllResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountTowerAllResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CountUserResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class SelectAllCustomerResult
	{
		
		private string _AccountNumber;
		
		private string _Firstname;
		
		private string _Middlename;
		
		private string _Lastname;
		
		private string _Birthdate;
		
		private string _CivilStatus;
		
		private string _Gender;
		
		private string _Nationality;
		
		private string _CompanyName;
		
		private string _ServicePlanName;
		
		private string _BillingAddress;
		
		private string _TowerID;
		
		private string _UnitNo;
		
		private string _EmailAddress;
		
		private string _ContactNumber;
		
		private string _ContactNumber2;
		
		private string _Status;
		
		private string _DateAdded;
		
		public SelectAllCustomerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middlename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Middlename
		{
			get
			{
				return this._Middlename;
			}
			set
			{
				if ((this._Middlename != value))
				{
					this._Middlename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this._Birthdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CivilStatus
		{
			get
			{
				return this._CivilStatus;
			}
			set
			{
				if ((this._CivilStatus != value))
				{
					this._CivilStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this._Nationality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServicePlanName
		{
			get
			{
				return this._ServicePlanName;
			}
			set
			{
				if ((this._ServicePlanName != value))
				{
					this._ServicePlanName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillingAddress
		{
			get
			{
				return this._BillingAddress;
			}
			set
			{
				if ((this._BillingAddress != value))
				{
					this._BillingAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TowerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TowerID
		{
			get
			{
				return this._TowerID;
			}
			set
			{
				if ((this._TowerID != value))
				{
					this._TowerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitNo
		{
			get
			{
				return this._UnitNo;
			}
			set
			{
				if ((this._UnitNo != value))
				{
					this._UnitNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this._ContactNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber2", DbType="NVarChar(50)")]
		public string ContactNumber2
		{
			get
			{
				return this._ContactNumber2;
			}
			set
			{
				if ((this._ContactNumber2 != value))
				{
					this._ContactNumber2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
	}
	
	public partial class SelectCustomerResult
	{
		
		private string _AccountNumber;
		
		private string _Firstname;
		
		private string _Middlename;
		
		private string _Lastname;
		
		private string _Birthdate;
		
		private string _CivilStatus;
		
		private string _Gender;
		
		private string _Nationality;
		
		private string _CompanyName;
		
		private string _ServicePlanName;
		
		private string _BillingAddress;
		
		private string _TowerID;
		
		private string _UnitNo;
		
		private string _EmailAddress;
		
		private string _ContactNumber;
		
		private string _ContactNumber2;
		
		private string _Status;
		
		private string _DateAdded;
		
		public SelectCustomerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middlename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Middlename
		{
			get
			{
				return this._Middlename;
			}
			set
			{
				if ((this._Middlename != value))
				{
					this._Middlename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this._Birthdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CivilStatus
		{
			get
			{
				return this._CivilStatus;
			}
			set
			{
				if ((this._CivilStatus != value))
				{
					this._CivilStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this._Nationality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServicePlanName
		{
			get
			{
				return this._ServicePlanName;
			}
			set
			{
				if ((this._ServicePlanName != value))
				{
					this._ServicePlanName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillingAddress
		{
			get
			{
				return this._BillingAddress;
			}
			set
			{
				if ((this._BillingAddress != value))
				{
					this._BillingAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TowerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TowerID
		{
			get
			{
				return this._TowerID;
			}
			set
			{
				if ((this._TowerID != value))
				{
					this._TowerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitNo
		{
			get
			{
				return this._UnitNo;
			}
			set
			{
				if ((this._UnitNo != value))
				{
					this._UnitNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this._ContactNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber2", DbType="NVarChar(50)")]
		public string ContactNumber2
		{
			get
			{
				return this._ContactNumber2;
			}
			set
			{
				if ((this._ContactNumber2 != value))
				{
					this._ContactNumber2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
	}
	
	public partial class SelectJobOrderResult
	{
		
		private string _JobId;
		
		private string _JobType;
		
		private string _AccountNumber;
		
		private string _Description;
		
		private string _InstallationNotes;
		
		private string _Remarks;
		
		private string _Technician;
		
		private string _DateCreated;
		
		private string _DateScheduled;
		
		private string _TimeScheduled;
		
		private string _Status;
		
		public SelectJobOrderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this._JobId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobType", DbType="NVarChar(50)")]
		public string JobType
		{
			get
			{
				return this._JobType;
			}
			set
			{
				if ((this._JobType != value))
				{
					this._JobType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationNotes", DbType="NVarChar(MAX)")]
		public string InstallationNotes
		{
			get
			{
				return this._InstallationNotes;
			}
			set
			{
				if ((this._InstallationNotes != value))
				{
					this._InstallationNotes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Technician", DbType="NVarChar(50)")]
		public string Technician
		{
			get
			{
				return this._Technician;
			}
			set
			{
				if ((this._Technician != value))
				{
					this._Technician = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="NVarChar(50)")]
		public string DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateScheduled", DbType="NVarChar(50)")]
		public string DateScheduled
		{
			get
			{
				return this._DateScheduled;
			}
			set
			{
				if ((this._DateScheduled != value))
				{
					this._DateScheduled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeScheduled", DbType="NVarChar(50)")]
		public string TimeScheduled
		{
			get
			{
				return this._TimeScheduled;
			}
			set
			{
				if ((this._TimeScheduled != value))
				{
					this._TimeScheduled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class SelectServicePlanResult
	{
		
		private string _ServicePlanID;
		
		private string _ServicePlanName;
		
		private string _Description;
		
		private decimal _Internet;
		
		private decimal _VAT;
		
		private decimal _Less;
		
		private decimal _Total;
		
		private string _Status;
		
		public SelectServicePlanResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServicePlanID
		{
			get
			{
				return this._ServicePlanID;
			}
			set
			{
				if ((this._ServicePlanID != value))
				{
					this._ServicePlanID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServicePlanName
		{
			get
			{
				return this._ServicePlanName;
			}
			set
			{
				if ((this._ServicePlanName != value))
				{
					this._ServicePlanName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Internet", DbType="Decimal(18,2) NOT NULL")]
		public decimal Internet
		{
			get
			{
				return this._Internet;
			}
			set
			{
				if ((this._Internet != value))
				{
					this._Internet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Decimal(18,2) NOT NULL")]
		public decimal VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this._VAT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Less", DbType="Decimal(18,2) NOT NULL")]
		public decimal Less
		{
			get
			{
				return this._Less;
			}
			set
			{
				if ((this._Less != value))
				{
					this._Less = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class SelectServicePlanByPlanNameResult
	{
		
		private string _ServicePlanID;
		
		private string _ServicePlanName;
		
		private string _Description;
		
		private decimal _Internet;
		
		private decimal _VAT;
		
		private decimal _Less;
		
		private decimal _Total;
		
		private string _Status;
		
		public SelectServicePlanByPlanNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServicePlanID
		{
			get
			{
				return this._ServicePlanID;
			}
			set
			{
				if ((this._ServicePlanID != value))
				{
					this._ServicePlanID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServicePlanName
		{
			get
			{
				return this._ServicePlanName;
			}
			set
			{
				if ((this._ServicePlanName != value))
				{
					this._ServicePlanName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Internet", DbType="Decimal(18,2) NOT NULL")]
		public decimal Internet
		{
			get
			{
				return this._Internet;
			}
			set
			{
				if ((this._Internet != value))
				{
					this._Internet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Decimal(18,2) NOT NULL")]
		public decimal VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this._VAT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Less", DbType="Decimal(18,2) NOT NULL")]
		public decimal Less
		{
			get
			{
				return this._Less;
			}
			set
			{
				if ((this._Less != value))
				{
					this._Less = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class SelectUserWhereUserIDResult
	{
		
		private string _UserID;
		
		private string _Firstname;
		
		private string _Middlename;
		
		private string _Lastname;
		
		private string _Password;
		
		private string _UserType;
		
		private string _Status;
		
		public SelectUserWhereUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middlename", DbType="NVarChar(50)")]
		public string Middlename
		{
			get
			{
				return this._Middlename;
			}
			set
			{
				if ((this._Middlename != value))
				{
					this._Middlename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(50)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this._UserType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class CountBadgeForActivationAndOpenFromJobOrderResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountBadgeForActivationAndOpenFromJobOrderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class SelectCustomerTypeResult
	{
		
		private int _ID;
		
		private string _AccountNumber;
		
		private string _CustomerType;
		
		private string _ValidID;
		
		private string _AuthorityToMoveIn;
		
		private string _Passport;
		
		private string _ICRCard;
		
		private string _LeaseOfContract;
		
		public SelectCustomerTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="NVarChar(50)")]
		public string CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this._CustomerType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidID", DbType="NVarChar(50)")]
		public string ValidID
		{
			get
			{
				return this._ValidID;
			}
			set
			{
				if ((this._ValidID != value))
				{
					this._ValidID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityToMoveIn", DbType="NVarChar(50)")]
		public string AuthorityToMoveIn
		{
			get
			{
				return this._AuthorityToMoveIn;
			}
			set
			{
				if ((this._AuthorityToMoveIn != value))
				{
					this._AuthorityToMoveIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passport", DbType="NVarChar(50)")]
		public string Passport
		{
			get
			{
				return this._Passport;
			}
			set
			{
				if ((this._Passport != value))
				{
					this._Passport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICRCard", DbType="NVarChar(50)")]
		public string ICRCard
		{
			get
			{
				return this._ICRCard;
			}
			set
			{
				if ((this._ICRCard != value))
				{
					this._ICRCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaseOfContract", DbType="NVarChar(50)")]
		public string LeaseOfContract
		{
			get
			{
				return this._LeaseOfContract;
			}
			set
			{
				if ((this._LeaseOfContract != value))
				{
					this._LeaseOfContract = value;
				}
			}
		}
	}
	
	public partial class CheckScheduleConflictResult
	{
		
		private string _JobId;
		
		private string _JobType;
		
		private string _AccountNumber;
		
		private string _Description;
		
		private string _InstallationNotes;
		
		private string _Remarks;
		
		private string _Technician;
		
		private string _DateCreated;
		
		private string _DateScheduled;
		
		private string _TimeScheduled;
		
		private string _Status;
		
		public CheckScheduleConflictResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this._JobId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobType", DbType="NVarChar(50)")]
		public string JobType
		{
			get
			{
				return this._JobType;
			}
			set
			{
				if ((this._JobType != value))
				{
					this._JobType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationNotes", DbType="NVarChar(MAX)")]
		public string InstallationNotes
		{
			get
			{
				return this._InstallationNotes;
			}
			set
			{
				if ((this._InstallationNotes != value))
				{
					this._InstallationNotes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Technician", DbType="NVarChar(50)")]
		public string Technician
		{
			get
			{
				return this._Technician;
			}
			set
			{
				if ((this._Technician != value))
				{
					this._Technician = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="NVarChar(50)")]
		public string DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateScheduled", DbType="NVarChar(50)")]
		public string DateScheduled
		{
			get
			{
				return this._DateScheduled;
			}
			set
			{
				if ((this._DateScheduled != value))
				{
					this._DateScheduled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeScheduled", DbType="NVarChar(50)")]
		public string TimeScheduled
		{
			get
			{
				return this._TimeScheduled;
			}
			set
			{
				if ((this._TimeScheduled != value))
				{
					this._TimeScheduled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class SearchAccountNumberResult
	{
		
		private string _AccountNumber;
		
		public SearchAccountNumberResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
	}
	
	public partial class CountBadgeForActivationFromJobOrderResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountBadgeForActivationFromJobOrderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CountBadgeForRepairAndOpenFromJobOrderResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CountBadgeForRepairAndOpenFromJobOrderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CheckCustomerIfExistByTowerAndUnitNumberResult
	{
		
		private int _id;
		
		private string _AccountNumber;
		
		private string _Firstname;
		
		private string _Middlename;
		
		private string _Lastname;
		
		private string _Birthdate;
		
		private string _CivilStatus;
		
		private string _Gender;
		
		private string _Nationality;
		
		private string _CompanyName;
		
		private string _ServicePlanName;
		
		private string _BillingAddress;
		
		private string _TowerID;
		
		private string _UnitNo;
		
		private string _EmailAddress;
		
		private string _ContactNumber;
		
		private string _ContactNumber2;
		
		private string _Status;
		
		private string _DateAdded;
		
		public CheckCustomerIfExistByTowerAndUnitNumberResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middlename", DbType="NVarChar(50)")]
		public string Middlename
		{
			get
			{
				return this._Middlename;
			}
			set
			{
				if ((this._Middlename != value))
				{
					this._Middlename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this._Birthdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CivilStatus
		{
			get
			{
				return this._CivilStatus;
			}
			set
			{
				if ((this._CivilStatus != value))
				{
					this._CivilStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this._Nationality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServicePlanName
		{
			get
			{
				return this._ServicePlanName;
			}
			set
			{
				if ((this._ServicePlanName != value))
				{
					this._ServicePlanName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillingAddress
		{
			get
			{
				return this._BillingAddress;
			}
			set
			{
				if ((this._BillingAddress != value))
				{
					this._BillingAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TowerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TowerID
		{
			get
			{
				return this._TowerID;
			}
			set
			{
				if ((this._TowerID != value))
				{
					this._TowerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitNo
		{
			get
			{
				return this._UnitNo;
			}
			set
			{
				if ((this._UnitNo != value))
				{
					this._UnitNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this._ContactNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber2", DbType="NVarChar(50)")]
		public string ContactNumber2
		{
			get
			{
				return this._ContactNumber2;
			}
			set
			{
				if ((this._ContactNumber2 != value))
				{
					this._ContactNumber2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
	}
	
	public partial class SelectBillingbyAccountNumberResult
	{
		
		private int _id;
		
		private string _BillingID;
		
		private string _AccountNumber;
		
		private string _DateAdded;
		
		private int _BillNumber;
		
		private decimal _BalanceFromPreviousBill;
		
		private decimal _PaymentReceivedPreviousBill;
		
		private decimal _PaymentReceived;
		
		private decimal _RemainingBalanceFromPreviousBill;
		
		private string _ServicePlandID;
		
		private decimal _TotalCurrentBill;
		
		private decimal _TotalAmountDue;
		
		private string _DueDate;
		
		private string _DueDateIdentifier;
		
		private string _Status;
		
		private System.Nullable<decimal> _InstallationBalance;
		
		public SelectBillingbyAccountNumberResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillingID
		{
			get
			{
				return this._BillingID;
			}
			set
			{
				if ((this._BillingID != value))
				{
					this._BillingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNumber", DbType="Int NOT NULL")]
		public int BillNumber
		{
			get
			{
				return this._BillNumber;
			}
			set
			{
				if ((this._BillNumber != value))
				{
					this._BillNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceFromPreviousBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal BalanceFromPreviousBill
		{
			get
			{
				return this._BalanceFromPreviousBill;
			}
			set
			{
				if ((this._BalanceFromPreviousBill != value))
				{
					this._BalanceFromPreviousBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentReceivedPreviousBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaymentReceivedPreviousBill
		{
			get
			{
				return this._PaymentReceivedPreviousBill;
			}
			set
			{
				if ((this._PaymentReceivedPreviousBill != value))
				{
					this._PaymentReceivedPreviousBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentReceived", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaymentReceived
		{
			get
			{
				return this._PaymentReceived;
			}
			set
			{
				if ((this._PaymentReceived != value))
				{
					this._PaymentReceived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingBalanceFromPreviousBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal RemainingBalanceFromPreviousBill
		{
			get
			{
				return this._RemainingBalanceFromPreviousBill;
			}
			set
			{
				if ((this._RemainingBalanceFromPreviousBill != value))
				{
					this._RemainingBalanceFromPreviousBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlandID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServicePlandID
		{
			get
			{
				return this._ServicePlandID;
			}
			set
			{
				if ((this._ServicePlandID != value))
				{
					this._ServicePlandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCurrentBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalCurrentBill
		{
			get
			{
				return this._TotalCurrentBill;
			}
			set
			{
				if ((this._TotalCurrentBill != value))
				{
					this._TotalCurrentBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountDue", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalAmountDue
		{
			get
			{
				return this._TotalAmountDue;
			}
			set
			{
				if ((this._TotalAmountDue != value))
				{
					this._TotalAmountDue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this._DueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDateIdentifier", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DueDateIdentifier
		{
			get
			{
				return this._DueDateIdentifier;
			}
			set
			{
				if ((this._DueDateIdentifier != value))
				{
					this._DueDateIdentifier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationBalance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InstallationBalance
		{
			get
			{
				return this._InstallationBalance;
			}
			set
			{
				if ((this._InstallationBalance != value))
				{
					this._InstallationBalance = value;
				}
			}
		}
	}
	
	public partial class SelectBillingbyAccountNumberandStatusForPaymentResult
	{
		
		private int _id;
		
		private string _BillingID;
		
		private string _AccountNumber;
		
		private string _DateAdded;
		
		private int _BillNumber;
		
		private decimal _BalanceFromPreviousBill;
		
		private decimal _PaymentReceivedPreviousBill;
		
		private decimal _PaymentReceived;
		
		private decimal _RemainingBalanceFromPreviousBill;
		
		private string _ServicePlandID;
		
		private decimal _TotalCurrentBill;
		
		private decimal _TotalAmountDue;
		
		private string _DueDate;
		
		private string _DueDateIdentifier;
		
		private string _Status;
		
		private System.Nullable<decimal> _InstallationBalance;
		
		public SelectBillingbyAccountNumberandStatusForPaymentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillingID
		{
			get
			{
				return this._BillingID;
			}
			set
			{
				if ((this._BillingID != value))
				{
					this._BillingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNumber", DbType="Int NOT NULL")]
		public int BillNumber
		{
			get
			{
				return this._BillNumber;
			}
			set
			{
				if ((this._BillNumber != value))
				{
					this._BillNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceFromPreviousBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal BalanceFromPreviousBill
		{
			get
			{
				return this._BalanceFromPreviousBill;
			}
			set
			{
				if ((this._BalanceFromPreviousBill != value))
				{
					this._BalanceFromPreviousBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentReceivedPreviousBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaymentReceivedPreviousBill
		{
			get
			{
				return this._PaymentReceivedPreviousBill;
			}
			set
			{
				if ((this._PaymentReceivedPreviousBill != value))
				{
					this._PaymentReceivedPreviousBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentReceived", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaymentReceived
		{
			get
			{
				return this._PaymentReceived;
			}
			set
			{
				if ((this._PaymentReceived != value))
				{
					this._PaymentReceived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingBalanceFromPreviousBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal RemainingBalanceFromPreviousBill
		{
			get
			{
				return this._RemainingBalanceFromPreviousBill;
			}
			set
			{
				if ((this._RemainingBalanceFromPreviousBill != value))
				{
					this._RemainingBalanceFromPreviousBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlandID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServicePlandID
		{
			get
			{
				return this._ServicePlandID;
			}
			set
			{
				if ((this._ServicePlandID != value))
				{
					this._ServicePlandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCurrentBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalCurrentBill
		{
			get
			{
				return this._TotalCurrentBill;
			}
			set
			{
				if ((this._TotalCurrentBill != value))
				{
					this._TotalCurrentBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountDue", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalAmountDue
		{
			get
			{
				return this._TotalAmountDue;
			}
			set
			{
				if ((this._TotalAmountDue != value))
				{
					this._TotalAmountDue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this._DueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDateIdentifier", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DueDateIdentifier
		{
			get
			{
				return this._DueDateIdentifier;
			}
			set
			{
				if ((this._DueDateIdentifier != value))
				{
					this._DueDateIdentifier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationBalance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InstallationBalance
		{
			get
			{
				return this._InstallationBalance;
			}
			set
			{
				if ((this._InstallationBalance != value))
				{
					this._InstallationBalance = value;
				}
			}
		}
	}
	
	public partial class SelectBillIDResult
	{
		
		private int _id;
		
		private string _BillingID;
		
		private string _AccountNumber;
		
		private string _DateAdded;
		
		private int _BillNumber;
		
		private decimal _BalanceFromPreviousBill;
		
		private decimal _PaymentReceivedPreviousBill;
		
		private decimal _PaymentReceived;
		
		private decimal _RemainingBalanceFromPreviousBill;
		
		private string _ServicePlandID;
		
		private decimal _TotalCurrentBill;
		
		private decimal _TotalAmountDue;
		
		private string _DueDate;
		
		private string _DueDateIdentifier;
		
		private string _Status;
		
		private System.Nullable<decimal> _InstallationBalance;
		
		public SelectBillIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillingID
		{
			get
			{
				return this._BillingID;
			}
			set
			{
				if ((this._BillingID != value))
				{
					this._BillingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this._DateAdded = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillNumber", DbType="Int NOT NULL")]
		public int BillNumber
		{
			get
			{
				return this._BillNumber;
			}
			set
			{
				if ((this._BillNumber != value))
				{
					this._BillNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceFromPreviousBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal BalanceFromPreviousBill
		{
			get
			{
				return this._BalanceFromPreviousBill;
			}
			set
			{
				if ((this._BalanceFromPreviousBill != value))
				{
					this._BalanceFromPreviousBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentReceivedPreviousBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaymentReceivedPreviousBill
		{
			get
			{
				return this._PaymentReceivedPreviousBill;
			}
			set
			{
				if ((this._PaymentReceivedPreviousBill != value))
				{
					this._PaymentReceivedPreviousBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentReceived", DbType="Decimal(18,2) NOT NULL")]
		public decimal PaymentReceived
		{
			get
			{
				return this._PaymentReceived;
			}
			set
			{
				if ((this._PaymentReceived != value))
				{
					this._PaymentReceived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingBalanceFromPreviousBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal RemainingBalanceFromPreviousBill
		{
			get
			{
				return this._RemainingBalanceFromPreviousBill;
			}
			set
			{
				if ((this._RemainingBalanceFromPreviousBill != value))
				{
					this._RemainingBalanceFromPreviousBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlandID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ServicePlandID
		{
			get
			{
				return this._ServicePlandID;
			}
			set
			{
				if ((this._ServicePlandID != value))
				{
					this._ServicePlandID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCurrentBill", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalCurrentBill
		{
			get
			{
				return this._TotalCurrentBill;
			}
			set
			{
				if ((this._TotalCurrentBill != value))
				{
					this._TotalCurrentBill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountDue", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalAmountDue
		{
			get
			{
				return this._TotalAmountDue;
			}
			set
			{
				if ((this._TotalAmountDue != value))
				{
					this._TotalAmountDue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this._DueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDateIdentifier", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DueDateIdentifier
		{
			get
			{
				return this._DueDateIdentifier;
			}
			set
			{
				if ((this._DueDateIdentifier != value))
				{
					this._DueDateIdentifier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationBalance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InstallationBalance
		{
			get
			{
				return this._InstallationBalance;
			}
			set
			{
				if ((this._InstallationBalance != value))
				{
					this._InstallationBalance = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
